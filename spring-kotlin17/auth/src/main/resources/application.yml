server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
spring:
  application:
    name: auth-service
  datasource:
    url: jdbc:postgresql://${SERVER_IP:localhost}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DB:boilerplate}?currentSchema=${POSTGRESQL_SCHEMA:public}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:senocak}
    hikari:
      minimum-idle: 0 # The minimum connection pool size is 0
      maximum-pool-size: 40 # it can grow to at most 40 connections
      max-lifetime: 900_000 # to retire pooled connections after 10 minutes
      transaction-isolation: TRANSACTION_READ_COMMITTED # to optimize the number of gap locks held by db when traversing the clustered index for bulk updates or deletes.
  flyway:
    locations: classpath:migration
    placeholderReplacement: false
    sql-migration-prefix: V
    table: flyway_schema_history
    enabled: true
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        highlight_sql: true
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: ${LOG_QUERIES_SLOWER_THAN_MS:10}
    hibernate:
      ddl-auto: validate
  messages:
    basename: locales.messages
    encoding: UTF-8
    cache-duration: ${MESSAGES_CACHE_DURATION:-1}
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    deserialization:
      fail-on-unknown-properties: true
    time-zone: UTC
    mapper:
      sort-properties-alphabetically: false
  docker:
    compose:
      lifecycle-management: none
      enabled: false
logging:
  level:
    net:
      ttddyy:
        dsproxy:
          listener: debug
    org:
      hibernate:
        SQL: off
  #file:
  #  name: ./var/logs/app.log
app:
  jwtSecret: 5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
  jwtExpirationInMs: '#{60 * 50 * 1000}' # 50 minutes in milliseconds
  refreshExpirationInMs: '#{24 * 60 * 60 * 1000}' # 24 hours in milliseconds
  default-locale: en
  frontend-url: ${APP_FRONTEND_URL:http://localhost:3232}
  mail:
    host: ${MAIL_HOST:smtp.yandex.com.tr}
    port: 587
    protocol: ${MAIL_PROTOCOL:smtp}
    username: ${MAIL_USERNAME:notification@cosmosboard.com}
    password: ${MAIL_PASSWORD:xsqgbadvvwxasyoq}
    smtp:
      socketFactory:
        port: 465
        fallback: false
      auth: true
      starttls:
        enable: true
        required: true
  redis:
    HOST: ${REDIS_HOST:localhost}
    PORT: ${REDIS_PORT:6379}
    PASSWORD: ${REDIS_PASSWORD:senocak}
    TIMEOUT: ${REDIS_TIMEOUT:300}
  rabbitmq:
    HOST: ${RABBITMQ_HOST:localhost}
    PORT: ${RABBITMQ_PORT:5672}
    USER: ${RABBITMQ_USER:anil}
    SECRET: ${RABBITMQ_SECRET:senocak}
    EXCHANGE: ${EXCHANGE:spring-jwt-exchange}
    QUEUE: ${QUEUE:spring-jwt-queue}
    ROUTING_KEY: ${ROUTING_KEY:spring-jwt-routing-key}
springdoc:
  api-docs:
    path: /api/v1/swagger
  version: 1